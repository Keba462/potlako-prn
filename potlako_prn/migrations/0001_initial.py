# Generated by Django 3.1 on 2020-11-14 15:29

import _socket
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import django_revision.revision_field
import edc_base.model_fields.custom_fields
import edc_base.model_fields.hostname_modification_field
import edc_base.model_fields.userfield
import edc_base.model_fields.uuid_auto_field
import edc_base.model_validators.date
import edc_base.sites.managers
import edc_base.utils
import edc_protocol.validators
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('sites', '0002_alter_domain_unique'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ComponentsReceived',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, help_text='(suggest 40 characters max.)', max_length=250, unique=True, verbose_name='Name')),
                ('short_name', models.CharField(db_index=True, help_text='This is the stored value, required', max_length=250, unique=True, verbose_name='Stored value')),
                ('display_index', models.IntegerField(db_index=True, default=0, help_text='Index to control display order if not alphabetical, not required', verbose_name='display index')),
                ('field_name', models.CharField(blank=True, editable=False, help_text='Not required', max_length=25, null=True)),
                ('version', models.CharField(default='1.0', editable=False, max_length=35)),
            ],
            options={
                'ordering': ['display_index', 'name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SubjectOffStudy',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('action_identifier', models.CharField(max_length=25, null=True)),
                ('tracking_identifier', models.CharField(max_length=30, null=True)),
                ('related_tracking_identifier', models.CharField(max_length=30, null=True)),
                ('parent_tracking_identifier', models.CharField(max_length=30, null=True)),
                ('subject_identifier', models.CharField(max_length=50, unique=True)),
                ('schedule', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, verbose_name='Are scheduled data being submitted on the exit date?')),
                ('offstudy_date', models.DateField(default=edc_base.utils.get_utcnow, null=True, validators=[edc_protocol.validators.date_not_before_study_start, edc_base.model_validators.date.date_not_future], verbose_name='Offstudy date')),
                ('report_datetime', models.DateTimeField(default=edc_base.utils.get_utcnow, null=True, validators=[edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future], verbose_name='Report datetime')),
                ('reason', models.CharField(choices=[('death', 'Patient death'), ('ltfu', 'Patient lost to follow-up'), ('eval_complete', 'Cancer evaluation complete'), ('declines_further_eval', 'Patient or clinician declines further evaluation'), ('patient_requests_removal', 'Patient requests removal from Potlako'), ('clinician_requests_removal', 'Clinician requests removal from Potlako'), ('OTHER', 'Other (specify)')], max_length=50, null=True, verbose_name='Reason for exit')),
                ('reason_other', edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=35, null=True, verbose_name='If Other, specify ...')),
                ('general_comments', models.TextField(blank=True, max_length=150, null=True, verbose_name='Any general comments about patient exit?')),
                ('last_visit_date', models.DateField(validators=[edc_base.model_validators.date.date_not_future], verbose_name="What was the date of patient's last visit?")),
                ('last_visit_date_estimated', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, verbose_name="Is the patient's last visit date estimated?")),
                ('last_visit_date_estimation', models.CharField(blank=True, choices=[('day', 'Estimated day only'), ('day_month', 'Estimated day and month'), ('month', 'Estimated month only'), ('year', 'Estimate year only'), ('day_month_year', 'Estimated day, month and year')], max_length=15, null=True, verbose_name='Which part of the date was estimated, if any?')),
                ('last_visit_facility', models.CharField(choices=[('athlone_hospital', 'Athlone Hospital'), ('bamalete_lutheran_hospital', 'Bamalete Lutheran Hospital'), ('bokaa_clinic', 'Bokaa clinic'), ('deborah_reteif_memorial_hospital', 'Deborah. Reteif. Memorial Hospital'), ('goodhope_hospital', 'Goodhope Hospital'), ('gweta_hospital', 'Gweta Hospital'), ('kanye_sda_hospital', 'Kanye SDA Hospital'), ('lentsweletau_clinic', 'Lentsweletau clinic'), ('lerala_clinic', 'Lerala clinic'), ('letlhakeng_clinic', 'Letlhakeng clinic'), ('mahalapye_hospital', 'Mahalapye Hospital'), ('mandunyane_clinic', 'Mandunyane clinic'), ('manga_clinic', 'Manga clinic'), ('masunga_primary_hospital', 'Masunga Primary Hospital'), ('masunga_clinic', 'Masunga clinic'), ('mathangwane_clinic', 'Mathangwane clinic'), ('maunatlala_clinic', 'Maunatlala clinic'), ('metsimotlhabe_clinic', 'Metsimotlhabe clinic'), ('mmadianare_primary_hospital', 'Mmadinare Primary Hospital'), ('mmankgodi_clinic', 'Mmankgodi clinic'), ('mmathethe_clinic', 'Mmathethe clinic'), ('molapowabojang_clinic', 'Molapowabojang clinic'), ('nata_clinic', 'Nata clinic'), ('nyangagwe_hospital', 'Nyangagwe Hospital'), ('oodi_clinic', 'Oodi clinic'), ('otse_clinic', 'Otse clinic'), ('palapye_hospital', 'Palapye Hospital'), ('princess_marina_hospital', 'Princess Marina Hospital'), ('ramokgonami_clinic', 'Ramokgonami clinic'), ('scottish_livingstone_hospital', 'Scottish Livingstone Hospital'), ('sefophe_clinic', 'Sefophe clinic'), ('selibe_phikwe_hospital', 'Selibe Phikwe Hospital'), ('sheleketla_clinic', 'Sheleketla clinic'), ('shoshong_clinic', 'Shoshong clinic'), ('tati_siding_clinic', 'Tati Siding clinic'), ('thamaga_hospital', 'Thamaga Hospital'), ('OTHER', 'Other (specify)')], max_length=40, verbose_name="What was the facility of the patient's last visit")),
                ('last_visit_facility_other', edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=35, null=True, verbose_name='If Other, specify ...')),
                ('ltfu_criteria_met', models.CharField(blank=True, choices=[('missed_visits', 'Missed visits'), ('attempted_calls_to_patient', 'attempted calls to patient x 3 or 3 different days'), ('attempted_calls_to_next_kin1', 'attempted calls to next of kin 1 x 3 or 3 different days'), ('attempted_calls_to_next_kin2', 'attempted calls to next of kin 2 x 3 or 3 different days'), ('home_visit_done_unable_to_trace', 'home visit done and unable to trace')], max_length=50, null=True, verbose_name='Criteria met for loss to follow up')),
                ('patient_relocated', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, verbose_name='Has the patient relocated?')),
                ('new_facility_name', models.CharField(blank=True, max_length=30, null=True, verbose_name="If relocated, patient's NEW facility name")),
                ('new_facility_type', models.CharField(blank=True, choices=[('health_post', 'health post'), ('primary_clinic', 'primary clinic'), ('primary_hospital', 'primary hospital'), ('secondary_hospital', 'secondary hospital'), ('referral_hospital', 'referral hospital')], max_length=30, null=True, verbose_name="If relocated, patient's NEW facility type")),
                ('exit_hiv_status', models.CharField(choices=[('POS', 'Positive'), ('NEG', 'Negative'), ('unknown', 'Unknown')], max_length=10, verbose_name="What was patient's HIV status at exit?")),
                ('latest_hiv_test_known', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, verbose_name='Is the latest HIV test date known for the patient?')),
                ('hiv_test_date', models.DateField(blank=True, null=True, verbose_name='If yes, please enter date of HIV test')),
                ('hiv_test_date_estimated', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, null=True, verbose_name='Is the HIV test date estimated?')),
                ('hiv_test_date_estimation', models.CharField(blank=True, choices=[('day', 'Estimated day only'), ('day_month', 'Estimated day and month'), ('month', 'Estimated month only'), ('year', 'Estimate year only'), ('day_month_year', 'Estimated day, month and year')], max_length=15, null=True, verbose_name='Which part of the date was estimated, if any?')),
                ('review_flag', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, verbose_name='Flag for physician review')),
            ],
            options={
                'verbose_name': 'Subject off Study',
                'verbose_name_plural': 'Subject Off Study',
            },
        ),
        migrations.CreateModel(
            name='HistoricalSubjectOffStudy',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, db_index=True, editable=False, help_text='System auto field. UUID primary key.')),
                ('action_identifier', models.CharField(max_length=25, null=True)),
                ('tracking_identifier', models.CharField(max_length=30, null=True)),
                ('related_tracking_identifier', models.CharField(max_length=30, null=True)),
                ('parent_tracking_identifier', models.CharField(max_length=30, null=True)),
                ('subject_identifier', models.CharField(db_index=True, max_length=50)),
                ('schedule', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, verbose_name='Are scheduled data being submitted on the exit date?')),
                ('offstudy_date', models.DateField(default=edc_base.utils.get_utcnow, null=True, validators=[edc_protocol.validators.date_not_before_study_start, edc_base.model_validators.date.date_not_future], verbose_name='Offstudy date')),
                ('report_datetime', models.DateTimeField(default=edc_base.utils.get_utcnow, null=True, validators=[edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future], verbose_name='Report datetime')),
                ('reason', models.CharField(choices=[('death', 'Patient death'), ('ltfu', 'Patient lost to follow-up'), ('eval_complete', 'Cancer evaluation complete'), ('declines_further_eval', 'Patient or clinician declines further evaluation'), ('patient_requests_removal', 'Patient requests removal from Potlako'), ('clinician_requests_removal', 'Clinician requests removal from Potlako'), ('OTHER', 'Other (specify)')], max_length=50, null=True, verbose_name='Reason for exit')),
                ('reason_other', edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=35, null=True, verbose_name='If Other, specify ...')),
                ('general_comments', models.TextField(blank=True, max_length=150, null=True, verbose_name='Any general comments about patient exit?')),
                ('last_visit_date', models.DateField(validators=[edc_base.model_validators.date.date_not_future], verbose_name="What was the date of patient's last visit?")),
                ('last_visit_date_estimated', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, verbose_name="Is the patient's last visit date estimated?")),
                ('last_visit_date_estimation', models.CharField(blank=True, choices=[('day', 'Estimated day only'), ('day_month', 'Estimated day and month'), ('month', 'Estimated month only'), ('year', 'Estimate year only'), ('day_month_year', 'Estimated day, month and year')], max_length=15, null=True, verbose_name='Which part of the date was estimated, if any?')),
                ('last_visit_facility', models.CharField(choices=[('athlone_hospital', 'Athlone Hospital'), ('bamalete_lutheran_hospital', 'Bamalete Lutheran Hospital'), ('bokaa_clinic', 'Bokaa clinic'), ('deborah_reteif_memorial_hospital', 'Deborah. Reteif. Memorial Hospital'), ('goodhope_hospital', 'Goodhope Hospital'), ('gweta_hospital', 'Gweta Hospital'), ('kanye_sda_hospital', 'Kanye SDA Hospital'), ('lentsweletau_clinic', 'Lentsweletau clinic'), ('lerala_clinic', 'Lerala clinic'), ('letlhakeng_clinic', 'Letlhakeng clinic'), ('mahalapye_hospital', 'Mahalapye Hospital'), ('mandunyane_clinic', 'Mandunyane clinic'), ('manga_clinic', 'Manga clinic'), ('masunga_primary_hospital', 'Masunga Primary Hospital'), ('masunga_clinic', 'Masunga clinic'), ('mathangwane_clinic', 'Mathangwane clinic'), ('maunatlala_clinic', 'Maunatlala clinic'), ('metsimotlhabe_clinic', 'Metsimotlhabe clinic'), ('mmadianare_primary_hospital', 'Mmadinare Primary Hospital'), ('mmankgodi_clinic', 'Mmankgodi clinic'), ('mmathethe_clinic', 'Mmathethe clinic'), ('molapowabojang_clinic', 'Molapowabojang clinic'), ('nata_clinic', 'Nata clinic'), ('nyangagwe_hospital', 'Nyangagwe Hospital'), ('oodi_clinic', 'Oodi clinic'), ('otse_clinic', 'Otse clinic'), ('palapye_hospital', 'Palapye Hospital'), ('princess_marina_hospital', 'Princess Marina Hospital'), ('ramokgonami_clinic', 'Ramokgonami clinic'), ('scottish_livingstone_hospital', 'Scottish Livingstone Hospital'), ('sefophe_clinic', 'Sefophe clinic'), ('selibe_phikwe_hospital', 'Selibe Phikwe Hospital'), ('sheleketla_clinic', 'Sheleketla clinic'), ('shoshong_clinic', 'Shoshong clinic'), ('tati_siding_clinic', 'Tati Siding clinic'), ('thamaga_hospital', 'Thamaga Hospital'), ('OTHER', 'Other (specify)')], max_length=40, verbose_name="What was the facility of the patient's last visit")),
                ('last_visit_facility_other', edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=35, null=True, verbose_name='If Other, specify ...')),
                ('ltfu_criteria_met', models.CharField(blank=True, choices=[('missed_visits', 'Missed visits'), ('attempted_calls_to_patient', 'attempted calls to patient x 3 or 3 different days'), ('attempted_calls_to_next_kin1', 'attempted calls to next of kin 1 x 3 or 3 different days'), ('attempted_calls_to_next_kin2', 'attempted calls to next of kin 2 x 3 or 3 different days'), ('home_visit_done_unable_to_trace', 'home visit done and unable to trace')], max_length=50, null=True, verbose_name='Criteria met for loss to follow up')),
                ('patient_relocated', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, verbose_name='Has the patient relocated?')),
                ('new_facility_name', models.CharField(blank=True, max_length=30, null=True, verbose_name="If relocated, patient's NEW facility name")),
                ('new_facility_type', models.CharField(blank=True, choices=[('health_post', 'health post'), ('primary_clinic', 'primary clinic'), ('primary_hospital', 'primary hospital'), ('secondary_hospital', 'secondary hospital'), ('referral_hospital', 'referral hospital')], max_length=30, null=True, verbose_name="If relocated, patient's NEW facility type")),
                ('exit_hiv_status', models.CharField(choices=[('POS', 'Positive'), ('NEG', 'Negative'), ('unknown', 'Unknown')], max_length=10, verbose_name="What was patient's HIV status at exit?")),
                ('latest_hiv_test_known', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, verbose_name='Is the latest HIV test date known for the patient?')),
                ('hiv_test_date', models.DateField(blank=True, null=True, verbose_name='If yes, please enter date of HIV test')),
                ('hiv_test_date_estimated', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, null=True, verbose_name='Is the HIV test date estimated?')),
                ('hiv_test_date_estimation', models.CharField(blank=True, choices=[('day', 'Estimated day only'), ('day_month', 'Estimated day and month'), ('month', 'Estimated month only'), ('year', 'Estimate year only'), ('day_month_year', 'Estimated day, month and year')], max_length=15, null=True, verbose_name='Which part of the date was estimated, if any?')),
                ('review_flag', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, verbose_name='Flag for physician review')),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(primary_key=True, serialize=False)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Subject off Study',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDeathReport',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, db_index=True, editable=False, help_text='System auto field. UUID primary key.')),
                ('action_identifier', models.CharField(max_length=25, null=True)),
                ('subject_identifier', models.CharField(max_length=50)),
                ('tracking_identifier', models.CharField(max_length=30, null=True)),
                ('related_tracking_identifier', models.CharField(max_length=30, null=True)),
                ('parent_tracking_identifier', models.CharField(max_length=30, null=True)),
                ('report_datetime', models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future], verbose_name='Report Date')),
                ('death_date', models.DateField(validators=[edc_base.model_validators.date.date_not_future], verbose_name='Date of Death:')),
                ('cause', models.CharField(choices=[('death_certificate_review', 'Death Certificate Review'), ('clinician', 'Clinician'), ('next_of_kin1', 'Next of kin 1'), ('inpatient_medical_file', 'Inpatient medical file'), ('fam_member', 'family member (specify relationship)'), ('OTHER', 'Other (specify)')], max_length=50, verbose_name='What was the source of information about participantdeath?')),
                ('specify_relationship', models.CharField(blank=True, max_length=30, null=True, verbose_name='Family member (specify relationship)')),
                ('cause_other', edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=50, null=True, verbose_name='If Other, specify ...')),
                ('autopsy_done', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, verbose_name='Was an autopsy done?')),
                ('perform_autopsy', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('N/A', 'Not applicable')], max_length=3, verbose_name='Will an autopsy be performed later')),
                ('death_cause', models.TextField(blank=True, help_text='Note: Cardiac and pulmonary arrest are not major reasons and should not be used to describe major cause', null=True, verbose_name='Describe the major cause of death (including pertinent autopsy information if available), starting with the first noticeable illness thought to be  related to death, continuing to time of death.')),
                ('cause_category', models.CharField(choices=[('hiv_related', 'HIV infection or HIV related diagnosis'), ('cancer', 'Cancer'), ('cancer_related_diseases', 'Cancer related diseases'), ('suicide', 'Suicide'), ('trauma', 'Trauma/Accident'), ('no_info', 'No information available'), ('OTHER', 'Other, specify')], max_length=50, verbose_name='Based on the description above, what category best defines the major cause of death?')),
                ('cause_category_other', edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=35, null=True, verbose_name='If Other, specify ...')),
                ('illness_duration', models.PositiveIntegerField(help_text='in days', verbose_name='Duration of acute illness directly causing death')),
                ('medical_responsibility', models.CharField(choices=[('doctor', 'Doctor'), ('nurse', 'Nurse'), ('traditional', 'Traditional Healer'), ('all', 'Both Doctor or Nurse and Traditional Healer'), ('none', 'No known medical care received (family/friends only)')], max_length=50, verbose_name='Who was responsible for primary medical care of the participant during the month prior to death?')),
                ('death_known', models.DateField(validators=[edc_base.model_validators.date.date_not_future], verbose_name="When did the study team learn about the patient's death?")),
                ('place_of_death', models.CharField(choices=[('home_or_community', 'Home or in the community'), ('facility', 'At facility'), ('unknown', 'Place of death unknown')], max_length=20, verbose_name='Name the place where the patient died?')),
                ('facility_patient_died', models.CharField(blank=True, choices=[('athlone_hospital', 'Athlone Hospital'), ('bamalete_lutheran_hospital', 'Bamalete Lutheran Hospital'), ('bokaa_clinic', 'Bokaa clinic'), ('deborah_reteif_memorial_hospital', 'Deborah. Reteif. Memorial Hospital'), ('goodhope_hospital', 'Goodhope Hospital'), ('gweta_hospital', 'Gweta Hospital'), ('kanye_sda_hospital', 'Kanye SDA Hospital'), ('lentsweletau_clinic', 'Lentsweletau clinic'), ('lerala_clinic', 'Lerala clinic'), ('letlhakeng_clinic', 'Letlhakeng clinic'), ('mahalapye_hospital', 'Mahalapye Hospital'), ('mandunyane_clinic', 'Mandunyane clinic'), ('manga_clinic', 'Manga clinic'), ('masunga_primary_hospital', 'Masunga Primary Hospital'), ('masunga_clinic', 'Masunga clinic'), ('mathangwane_clinic', 'Mathangwane clinic'), ('maunatlala_clinic', 'Maunatlala clinic'), ('metsimotlhabe_clinic', 'Metsimotlhabe clinic'), ('mmadianare_primary_hospital', 'Mmadinare Primary Hospital'), ('mmankgodi_clinic', 'Mmankgodi clinic'), ('mmathethe_clinic', 'Mmathethe clinic'), ('molapowabojang_clinic', 'Molapowabojang clinic'), ('nata_clinic', 'Nata clinic'), ('nyangagwe_hospital', 'Nyangagwe Hospital'), ('oodi_clinic', 'Oodi clinic'), ('otse_clinic', 'Otse clinic'), ('palapye_hospital', 'Palapye Hospital'), ('princess_marina_hospital', 'Princess Marina Hospital'), ('ramokgonami_clinic', 'Ramokgonami clinic'), ('scottish_livingstone_hospital', 'Scottish Livingstone Hospital'), ('sefophe_clinic', 'Sefophe clinic'), ('selibe_phikwe_hospital', 'Selibe Phikwe Hospital'), ('sheleketla_clinic', 'Sheleketla clinic'), ('shoshong_clinic', 'Shoshong clinic'), ('tati_siding_clinic', 'Tati Siding clinic'), ('thamaga_hospital', 'Thamaga Hospital'), ('OTHER', 'Other (specify)')], max_length=50, null=True, verbose_name='Name of the facility where the patient died?')),
                ('facility_patient_died_other', edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=35, null=True, verbose_name='If Other, specify ...')),
                ('participant_hospitalized', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, verbose_name='Was the participant hospitalised before death?')),
                ('hospitalised_facility', models.CharField(blank=True, choices=[('athlone_hospital', 'Athlone Hospital'), ('bamalete_lutheran_hospital', 'Bamalete Lutheran Hospital'), ('bokaa_clinic', 'Bokaa clinic'), ('deborah_reteif_memorial_hospital', 'Deborah. Reteif. Memorial Hospital'), ('goodhope_hospital', 'Goodhope Hospital'), ('gweta_hospital', 'Gweta Hospital'), ('kanye_sda_hospital', 'Kanye SDA Hospital'), ('lentsweletau_clinic', 'Lentsweletau clinic'), ('lerala_clinic', 'Lerala clinic'), ('letlhakeng_clinic', 'Letlhakeng clinic'), ('mahalapye_hospital', 'Mahalapye Hospital'), ('mandunyane_clinic', 'Mandunyane clinic'), ('manga_clinic', 'Manga clinic'), ('masunga_primary_hospital', 'Masunga Primary Hospital'), ('masunga_clinic', 'Masunga clinic'), ('mathangwane_clinic', 'Mathangwane clinic'), ('maunatlala_clinic', 'Maunatlala clinic'), ('metsimotlhabe_clinic', 'Metsimotlhabe clinic'), ('mmadianare_primary_hospital', 'Mmadinare Primary Hospital'), ('mmankgodi_clinic', 'Mmankgodi clinic'), ('mmathethe_clinic', 'Mmathethe clinic'), ('molapowabojang_clinic', 'Molapowabojang clinic'), ('nata_clinic', 'Nata clinic'), ('nyangagwe_hospital', 'Nyangagwe Hospital'), ('oodi_clinic', 'Oodi clinic'), ('otse_clinic', 'Otse clinic'), ('palapye_hospital', 'Palapye Hospital'), ('princess_marina_hospital', 'Princess Marina Hospital'), ('ramokgonami_clinic', 'Ramokgonami clinic'), ('scottish_livingstone_hospital', 'Scottish Livingstone Hospital'), ('sefophe_clinic', 'Sefophe clinic'), ('selibe_phikwe_hospital', 'Selibe Phikwe Hospital'), ('sheleketla_clinic', 'Sheleketla clinic'), ('shoshong_clinic', 'Shoshong clinic'), ('tati_siding_clinic', 'Tati Siding clinic'), ('thamaga_hospital', 'Thamaga Hospital'), ('OTHER', 'Other (specify)')], max_length=40, null=True, verbose_name='What was the facility where the patient was hospitalised?')),
                ('hospitalised_facility_other', edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=35, null=True, verbose_name='If Other, specify ...')),
                ('days_hospitalized', models.PositiveIntegerField(default=0, help_text='in days', verbose_name='For how many days was the participant hospitalised during the illness immediately before death? ')),
                ('comment', models.TextField(blank=True, max_length=250, null=True, verbose_name='Comments')),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(primary_key=True, serialize=False)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('site', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='sites.site')),
            ],
            options={
                'verbose_name': 'historical Death Report',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCoordinatorExit',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, db_index=True, editable=False, help_text='System auto field. UUID primary key.')),
                ('subject_identifier', models.CharField(db_index=True, max_length=50, verbose_name='Subject Identifier')),
                ('action_identifier', models.CharField(max_length=25, null=True)),
                ('tracking_identifier', models.CharField(max_length=30, null=True)),
                ('related_tracking_identifier', models.CharField(max_length=30, null=True)),
                ('parent_tracking_identifier', models.CharField(max_length=30, null=True)),
                ('offschedule_datetime', models.DateTimeField(default=edc_base.utils.get_utcnow, validators=[edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future], verbose_name='Date and time subject taken off schedule')),
                ('report_datetime', models.DateTimeField(default=edc_base.utils.get_utcnow, null=True, validators=[edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future], verbose_name='Report datetime')),
                ('components_rec_other', edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=50, null=True, verbose_name='Other Potlako component received:')),
                ('cancer_stage', models.CharField(blank=True, choices=[('not_yet_established', 'Not yet established'), ('stage_0', 'Stage 0'), ('stage_I', 'Stage I'), ('stage_II', 'Stage II'), ('stage_III', 'Stage III'), ('stage_IV', 'Stage IV')], max_length=20, null=True, verbose_name='If cancer, stage of cancer')),
                ('cancer_treatment_rec', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('unknown', 'Unknown')], help_text='(Example: radiation, surgery (beyond biopsy), chemotherapy, ART for KS, esophageal stenting)', max_length=7, verbose_name='Was any cancer specific treatment received?')),
                ('cancer_treatment', models.CharField(blank=True, choices=[('radiation', 'Radiation'), ('surgery', 'Surgery - Beyond biopsy'), ('chemotherapy', 'Chemotherapy'), ('art_for_ks', 'ART for KS'), ('esophageam_stenting', 'Esophageam stenting'), ('OTHER', 'Other, specify')], max_length=25, null=True, verbose_name='What specific cancer treatment was received?')),
                ('cancer_treatment_other', edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=35, null=True, verbose_name='If Other, specify ...')),
                ('date_therapy_started', models.DateField(blank=True, null=True, validators=[edc_base.model_validators.date.date_not_future], verbose_name='Date started cancer specific therapy')),
                ('date_therapy_started_estimated', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, null=True, verbose_name='Is the above therapy start date estimated?')),
                ('date_therapy_started_estimation', models.CharField(blank=True, choices=[('day', 'Estimated day only'), ('day_month', 'Estimated day and month'), ('month', 'Estimated month only'), ('year', 'Estimate year only'), ('day_month_year', 'Estimated day, month and year')], max_length=15, null=True, verbose_name='If yes, which part of the therapy start date was estimated?')),
                ('treatment_intent', models.CharField(choices=[('curative', 'Curative'), ('palliative', 'Palliative'), ('uncertain', 'Uncertain')], max_length=10, verbose_name='At time of exit, what was treatment intent?')),
                ('patient_disposition', models.CharField(choices=[('exit', 'Exit')], default='exit', max_length=15, verbose_name="What is the patient's final disposition?")),
                ('patient_contact_date', models.DateField(blank=True, null=True, validators=[edc_base.model_validators.date.date_is_future], verbose_name='If call/visit above, date for patient call/visit ')),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(primary_key=True, serialize=False)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('site', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='sites.site')),
            ],
            options={
                'verbose_name': 'historical Coordinator Exit',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='DeathReport',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('action_identifier', models.CharField(max_length=25, null=True)),
                ('subject_identifier', models.CharField(max_length=50)),
                ('tracking_identifier', models.CharField(max_length=30, null=True)),
                ('related_tracking_identifier', models.CharField(max_length=30, null=True)),
                ('parent_tracking_identifier', models.CharField(max_length=30, null=True)),
                ('report_datetime', models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future], verbose_name='Report Date')),
                ('death_date', models.DateField(validators=[edc_base.model_validators.date.date_not_future], verbose_name='Date of Death:')),
                ('cause', models.CharField(choices=[('death_certificate_review', 'Death Certificate Review'), ('clinician', 'Clinician'), ('next_of_kin1', 'Next of kin 1'), ('inpatient_medical_file', 'Inpatient medical file'), ('fam_member', 'family member (specify relationship)'), ('OTHER', 'Other (specify)')], max_length=50, verbose_name='What was the source of information about participantdeath?')),
                ('specify_relationship', models.CharField(blank=True, max_length=30, null=True, verbose_name='Family member (specify relationship)')),
                ('cause_other', edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=50, null=True, verbose_name='If Other, specify ...')),
                ('autopsy_done', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, verbose_name='Was an autopsy done?')),
                ('perform_autopsy', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('N/A', 'Not applicable')], max_length=3, verbose_name='Will an autopsy be performed later')),
                ('death_cause', models.TextField(blank=True, help_text='Note: Cardiac and pulmonary arrest are not major reasons and should not be used to describe major cause', null=True, verbose_name='Describe the major cause of death (including pertinent autopsy information if available), starting with the first noticeable illness thought to be  related to death, continuing to time of death.')),
                ('cause_category', models.CharField(choices=[('hiv_related', 'HIV infection or HIV related diagnosis'), ('cancer', 'Cancer'), ('cancer_related_diseases', 'Cancer related diseases'), ('suicide', 'Suicide'), ('trauma', 'Trauma/Accident'), ('no_info', 'No information available'), ('OTHER', 'Other, specify')], max_length=50, verbose_name='Based on the description above, what category best defines the major cause of death?')),
                ('cause_category_other', edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=35, null=True, verbose_name='If Other, specify ...')),
                ('illness_duration', models.PositiveIntegerField(help_text='in days', verbose_name='Duration of acute illness directly causing death')),
                ('medical_responsibility', models.CharField(choices=[('doctor', 'Doctor'), ('nurse', 'Nurse'), ('traditional', 'Traditional Healer'), ('all', 'Both Doctor or Nurse and Traditional Healer'), ('none', 'No known medical care received (family/friends only)')], max_length=50, verbose_name='Who was responsible for primary medical care of the participant during the month prior to death?')),
                ('death_known', models.DateField(validators=[edc_base.model_validators.date.date_not_future], verbose_name="When did the study team learn about the patient's death?")),
                ('place_of_death', models.CharField(choices=[('home_or_community', 'Home or in the community'), ('facility', 'At facility'), ('unknown', 'Place of death unknown')], max_length=20, verbose_name='Name the place where the patient died?')),
                ('facility_patient_died', models.CharField(blank=True, choices=[('athlone_hospital', 'Athlone Hospital'), ('bamalete_lutheran_hospital', 'Bamalete Lutheran Hospital'), ('bokaa_clinic', 'Bokaa clinic'), ('deborah_reteif_memorial_hospital', 'Deborah. Reteif. Memorial Hospital'), ('goodhope_hospital', 'Goodhope Hospital'), ('gweta_hospital', 'Gweta Hospital'), ('kanye_sda_hospital', 'Kanye SDA Hospital'), ('lentsweletau_clinic', 'Lentsweletau clinic'), ('lerala_clinic', 'Lerala clinic'), ('letlhakeng_clinic', 'Letlhakeng clinic'), ('mahalapye_hospital', 'Mahalapye Hospital'), ('mandunyane_clinic', 'Mandunyane clinic'), ('manga_clinic', 'Manga clinic'), ('masunga_primary_hospital', 'Masunga Primary Hospital'), ('masunga_clinic', 'Masunga clinic'), ('mathangwane_clinic', 'Mathangwane clinic'), ('maunatlala_clinic', 'Maunatlala clinic'), ('metsimotlhabe_clinic', 'Metsimotlhabe clinic'), ('mmadianare_primary_hospital', 'Mmadinare Primary Hospital'), ('mmankgodi_clinic', 'Mmankgodi clinic'), ('mmathethe_clinic', 'Mmathethe clinic'), ('molapowabojang_clinic', 'Molapowabojang clinic'), ('nata_clinic', 'Nata clinic'), ('nyangagwe_hospital', 'Nyangagwe Hospital'), ('oodi_clinic', 'Oodi clinic'), ('otse_clinic', 'Otse clinic'), ('palapye_hospital', 'Palapye Hospital'), ('princess_marina_hospital', 'Princess Marina Hospital'), ('ramokgonami_clinic', 'Ramokgonami clinic'), ('scottish_livingstone_hospital', 'Scottish Livingstone Hospital'), ('sefophe_clinic', 'Sefophe clinic'), ('selibe_phikwe_hospital', 'Selibe Phikwe Hospital'), ('sheleketla_clinic', 'Sheleketla clinic'), ('shoshong_clinic', 'Shoshong clinic'), ('tati_siding_clinic', 'Tati Siding clinic'), ('thamaga_hospital', 'Thamaga Hospital'), ('OTHER', 'Other (specify)')], max_length=50, null=True, verbose_name='Name of the facility where the patient died?')),
                ('facility_patient_died_other', edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=35, null=True, verbose_name='If Other, specify ...')),
                ('participant_hospitalized', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, verbose_name='Was the participant hospitalised before death?')),
                ('hospitalised_facility', models.CharField(blank=True, choices=[('athlone_hospital', 'Athlone Hospital'), ('bamalete_lutheran_hospital', 'Bamalete Lutheran Hospital'), ('bokaa_clinic', 'Bokaa clinic'), ('deborah_reteif_memorial_hospital', 'Deborah. Reteif. Memorial Hospital'), ('goodhope_hospital', 'Goodhope Hospital'), ('gweta_hospital', 'Gweta Hospital'), ('kanye_sda_hospital', 'Kanye SDA Hospital'), ('lentsweletau_clinic', 'Lentsweletau clinic'), ('lerala_clinic', 'Lerala clinic'), ('letlhakeng_clinic', 'Letlhakeng clinic'), ('mahalapye_hospital', 'Mahalapye Hospital'), ('mandunyane_clinic', 'Mandunyane clinic'), ('manga_clinic', 'Manga clinic'), ('masunga_primary_hospital', 'Masunga Primary Hospital'), ('masunga_clinic', 'Masunga clinic'), ('mathangwane_clinic', 'Mathangwane clinic'), ('maunatlala_clinic', 'Maunatlala clinic'), ('metsimotlhabe_clinic', 'Metsimotlhabe clinic'), ('mmadianare_primary_hospital', 'Mmadinare Primary Hospital'), ('mmankgodi_clinic', 'Mmankgodi clinic'), ('mmathethe_clinic', 'Mmathethe clinic'), ('molapowabojang_clinic', 'Molapowabojang clinic'), ('nata_clinic', 'Nata clinic'), ('nyangagwe_hospital', 'Nyangagwe Hospital'), ('oodi_clinic', 'Oodi clinic'), ('otse_clinic', 'Otse clinic'), ('palapye_hospital', 'Palapye Hospital'), ('princess_marina_hospital', 'Princess Marina Hospital'), ('ramokgonami_clinic', 'Ramokgonami clinic'), ('scottish_livingstone_hospital', 'Scottish Livingstone Hospital'), ('sefophe_clinic', 'Sefophe clinic'), ('selibe_phikwe_hospital', 'Selibe Phikwe Hospital'), ('sheleketla_clinic', 'Sheleketla clinic'), ('shoshong_clinic', 'Shoshong clinic'), ('tati_siding_clinic', 'Tati Siding clinic'), ('thamaga_hospital', 'Thamaga Hospital'), ('OTHER', 'Other (specify)')], max_length=40, null=True, verbose_name='What was the facility where the patient was hospitalised?')),
                ('hospitalised_facility_other', edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=35, null=True, verbose_name='If Other, specify ...')),
                ('days_hospitalized', models.PositiveIntegerField(default=0, help_text='in days', verbose_name='For how many days was the participant hospitalised during the illness immediately before death? ')),
                ('comment', models.TextField(blank=True, max_length=250, null=True, verbose_name='Comments')),
                ('site', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, to='sites.site')),
            ],
            options={
                'verbose_name': 'Death Report',
            },
            managers=[
                ('on_site', edc_base.sites.managers.CurrentSiteManager()),
            ],
        ),
        migrations.CreateModel(
            name='CoordinatorExit',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('subject_identifier', models.CharField(max_length=50, unique=True, verbose_name='Subject Identifier')),
                ('action_identifier', models.CharField(max_length=25, null=True)),
                ('tracking_identifier', models.CharField(max_length=30, null=True)),
                ('related_tracking_identifier', models.CharField(max_length=30, null=True)),
                ('parent_tracking_identifier', models.CharField(max_length=30, null=True)),
                ('offschedule_datetime', models.DateTimeField(default=edc_base.utils.get_utcnow, validators=[edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future], verbose_name='Date and time subject taken off schedule')),
                ('report_datetime', models.DateTimeField(default=edc_base.utils.get_utcnow, null=True, validators=[edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future], verbose_name='Report datetime')),
                ('components_rec_other', edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=50, null=True, verbose_name='Other Potlako component received:')),
                ('cancer_stage', models.CharField(blank=True, choices=[('not_yet_established', 'Not yet established'), ('stage_0', 'Stage 0'), ('stage_I', 'Stage I'), ('stage_II', 'Stage II'), ('stage_III', 'Stage III'), ('stage_IV', 'Stage IV')], max_length=20, null=True, verbose_name='If cancer, stage of cancer')),
                ('cancer_treatment_rec', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('unknown', 'Unknown')], help_text='(Example: radiation, surgery (beyond biopsy), chemotherapy, ART for KS, esophageal stenting)', max_length=7, verbose_name='Was any cancer specific treatment received?')),
                ('cancer_treatment', models.CharField(blank=True, choices=[('radiation', 'Radiation'), ('surgery', 'Surgery - Beyond biopsy'), ('chemotherapy', 'Chemotherapy'), ('art_for_ks', 'ART for KS'), ('esophageam_stenting', 'Esophageam stenting'), ('OTHER', 'Other, specify')], max_length=25, null=True, verbose_name='What specific cancer treatment was received?')),
                ('cancer_treatment_other', edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=35, null=True, verbose_name='If Other, specify ...')),
                ('date_therapy_started', models.DateField(blank=True, null=True, validators=[edc_base.model_validators.date.date_not_future], verbose_name='Date started cancer specific therapy')),
                ('date_therapy_started_estimated', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, null=True, verbose_name='Is the above therapy start date estimated?')),
                ('date_therapy_started_estimation', models.CharField(blank=True, choices=[('day', 'Estimated day only'), ('day_month', 'Estimated day and month'), ('month', 'Estimated month only'), ('year', 'Estimate year only'), ('day_month_year', 'Estimated day, month and year')], max_length=15, null=True, verbose_name='If yes, which part of the therapy start date was estimated?')),
                ('treatment_intent', models.CharField(choices=[('curative', 'Curative'), ('palliative', 'Palliative'), ('uncertain', 'Uncertain')], max_length=10, verbose_name='At time of exit, what was treatment intent?')),
                ('patient_disposition', models.CharField(choices=[('exit', 'Exit')], default='exit', max_length=15, verbose_name="What is the patient's final disposition?")),
                ('patient_contact_date', models.DateField(blank=True, null=True, validators=[edc_base.model_validators.date.date_is_future], verbose_name='If call/visit above, date for patient call/visit ')),
                ('components_rec', models.ManyToManyField(to='potlako_prn.ComponentsReceived', verbose_name='Potlako components received (or potentially received)')),
                ('site', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, to='sites.site')),
            ],
            options={
                'verbose_name': 'Coordinator Exit',
                'verbose_name_plural': 'Coordinator Exit',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('on_site', edc_base.sites.managers.CurrentSiteManager()),
            ],
        ),
    ]
